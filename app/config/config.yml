imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: services.yml }
    - { resource: "@FacebookTokenBundle/Resources/config/services.yml" }
    - { resource: "@AppBundle/Resources/config/services.yml" }

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: en

framework:
    #esi: ~
    translator: { fallbacks: ['%locale%'] }
    secret: '%secret%'
    router:
        resource: '%kernel.project_dir%/app/config/routing.yml'
        strict_requirements: ~
    form: ~
    csrf_protection: ~
    validation: { enable_annotations: true }
    serializer:
        enabled: true
    templating:
        engines: ['twig']
    default_locale: '%locale%'
    trusted_hosts: ~
    session:
        # https://symfony.com/doc/current/reference/configuration/framework.html#handler-id
        handler_id: session.handler.native_file
        save_path: '%kernel.project_dir%/var/sessions/%kernel.environment%'
    fragments: ~
    http_method_override: true
    assets: ~
    php_errors:
        log: true

# Twig Configuration
twig:
    debug: '%kernel.debug%'
    strict_variables: '%kernel.debug%'
    form_themes: ['bootstrap_3_layout.html.twig']

# Doctrine Configuration
doctrine:
    dbal:
        driver: pdo_mysql
        host: '%database_host%'
        port: '%database_port%'
        dbname: '%database_name%'
        user: '%database_user%'
        password: '%database_password%'
        charset: UTF8
        # if using pdo_sqlite as your database driver:
        #   1. add the path in parameters.yml
        #     e.g. database_path: '%kernel.project_dir%/var/data/data.sqlite'
        #   2. Uncomment database_path in parameters.yml.dist
        #   3. Uncomment next line:
        #path: '%database_path%'

    orm:
        auto_generate_proxy_classes: '%kernel.debug%'
        naming_strategy: doctrine.orm.naming_strategy.underscore
        auto_mapping: true

# Swiftmailer Configuration
swiftmailer:
    transport: '%mailer_transport%'
    host: '%mailer_host%'
    username: '%mailer_user%'
    password: '%mailer_password%'
    spool: { type: memory }

fos_rest:
    param_fetcher_listener: force
    body_converter:
        enabled: true
        validate: true
        validation_errors_argument: violations
    exception:
        enabled: true
        codes:
           { AppBundle\Exception\ResourceValidationException: 400, \Exception: 500}
    versioning:
        enabled: true
        resolvers:
            media_type: # Accept header
                enabled: true
                regex: '/(v|version)=(?P<version>[0-9\.]+)/'
    view:
        formats: { json: true, xml: false, rss: false }
        view_response_listener: true
        mime_types:
            json: ['application/json', 'application/json;version=1.0']
    serializer:
        serialize_null: true
    format_listener:
        rules:
            - { path: '^/api', priorities: ['json', 'html'], fallback_format: json, prefer_extension: true }
            - { path: '^/', priorities: [ 'html', '*/*'], fallback_format: ~, prefer_extension: true }


sensio_framework_extra:
    request: { converters: true }
    view: { annotations: true }


csa_guzzle:
    clients:
        facebook_api:
            config:
                base_url: https://graph.facebook.com

nelmio_api_doc: ~

fos_user:
    db_driver: orm # other valid values are 'mongodb' and 'couchdb'
    firewall_name: main
    user_class: FacebookTokenBundle\Entity\User
    from_email:
        address: contact@bilemo.com
        sender_name: BileMo

hwi_oauth:
    connect:
        account_connector: my_user_provider
    firewall_names: [main]
    fosub:
        username_iterations: 30
        properties:
            facebook: facebookID
    resource_owners:
        #Facebook Access
        facebook:
            type: facebook
            client_id: 134073260679567
            client_secret: f290aa72cad5a9b485abad6532ce8095
            scope: "public_profile, email"
            infos_url:     "https://graph.facebook.com/me?fields=id,first_name,last_name,email,link,picture.type(square)"
            paths:
                email:          email
                first_name:     first_name
                last_name:      last_name
                link:           link
                profilepicture: picture.data.url